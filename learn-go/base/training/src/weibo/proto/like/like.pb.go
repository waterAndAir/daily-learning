// Code generated by protoc-gen-go. DO NOT EDIT.
// source: like.proto

package like

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Like struct {
	FromUserId           uint64   `protobuf:"varint,1,opt,name=fromUserId,proto3" json:"fromUserId,omitempty"`
	FromUserName         string   `protobuf:"bytes,2,opt,name=fromUserName,proto3" json:"fromUserName,omitempty"`
	ToUserId             uint64   `protobuf:"varint,3,opt,name=toUserId,proto3" json:"toUserId,omitempty"`
	PostId               uint64   `protobuf:"varint,4,opt,name=postId,proto3" json:"postId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Like) Reset()         { *m = Like{} }
func (m *Like) String() string { return proto.CompactTextString(m) }
func (*Like) ProtoMessage()    {}
func (*Like) Descriptor() ([]byte, []int) {
	return fileDescriptor_51efb8acc70bf4d1, []int{0}
}

func (m *Like) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Like.Unmarshal(m, b)
}
func (m *Like) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Like.Marshal(b, m, deterministic)
}
func (m *Like) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Like.Merge(m, src)
}
func (m *Like) XXX_Size() int {
	return xxx_messageInfo_Like.Size(m)
}
func (m *Like) XXX_DiscardUnknown() {
	xxx_messageInfo_Like.DiscardUnknown(m)
}

var xxx_messageInfo_Like proto.InternalMessageInfo

func (m *Like) GetFromUserId() uint64 {
	if m != nil {
		return m.FromUserId
	}
	return 0
}

func (m *Like) GetFromUserName() string {
	if m != nil {
		return m.FromUserName
	}
	return ""
}

func (m *Like) GetToUserId() uint64 {
	if m != nil {
		return m.ToUserId
	}
	return 0
}

func (m *Like) GetPostId() uint64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

type Result struct {
	Res                  bool     `protobuf:"varint,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_51efb8acc70bf4d1, []int{1}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetRes() bool {
	if m != nil {
		return m.Res
	}
	return false
}

func init() {
	proto.RegisterType((*Like)(nil), "like.Like")
	proto.RegisterType((*Result)(nil), "like.Result")
}

func init() { proto.RegisterFile("like.proto", fileDescriptor_51efb8acc70bf4d1) }

var fileDescriptor_51efb8acc70bf4d1 = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0xc9, 0xcc, 0x4e,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0xea, 0xb8, 0x58, 0x7c, 0x32,
	0xb3, 0x53, 0x85, 0xe4, 0xb8, 0xb8, 0xd2, 0x8a, 0xf2, 0x73, 0x43, 0x8b, 0x53, 0x8b, 0x3c, 0x53,
	0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x82, 0x90, 0x44, 0x84, 0x94, 0xb8, 0x78, 0x60, 0x3c, 0xbf,
	0xc4, 0xdc, 0x54, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x14, 0x31, 0x21, 0x29, 0x2e, 0x8e,
	0x92, 0x7c, 0xa8, 0x09, 0xcc, 0x60, 0x13, 0xe0, 0x7c, 0x21, 0x31, 0x2e, 0xb6, 0x82, 0xfc, 0xe2,
	0x12, 0xcf, 0x14, 0x09, 0x16, 0xb0, 0x0c, 0x94, 0xa7, 0x24, 0xc5, 0xc5, 0x16, 0x94, 0x5a, 0x5c,
	0x9a, 0x53, 0x22, 0x24, 0xc0, 0xc5, 0x5c, 0x94, 0x5a, 0x0c, 0xb6, 0x9a, 0x23, 0x08, 0xc4, 0x34,
	0xb2, 0xe0, 0xe2, 0x06, 0xb9, 0x2d, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0x48, 0x93, 0x8b,
	0xbb, 0x38, 0x35, 0x2f, 0xc5, 0x37, 0xb5, 0xb8, 0x38, 0x31, 0x3d, 0x55, 0x88, 0x4b, 0x0f, 0xec,
	0x19, 0x90, 0x0a, 0x29, 0x1e, 0x08, 0x1b, 0x62, 0x92, 0x12, 0x43, 0x12, 0x1b, 0xd8, 0x8b, 0xc6,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd3, 0xba, 0x9c, 0x3a, 0xf0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LikeServiceClient is the client API for LikeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LikeServiceClient interface {
	SendMessage(ctx context.Context, in *Like, opts ...grpc.CallOption) (*Result, error)
}

type likeServiceClient struct {
	cc *grpc.ClientConn
}

func NewLikeServiceClient(cc *grpc.ClientConn) LikeServiceClient {
	return &likeServiceClient{cc}
}

func (c *likeServiceClient) SendMessage(ctx context.Context, in *Like, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/like.LikeService/sendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LikeServiceServer is the server API for LikeService service.
type LikeServiceServer interface {
	SendMessage(context.Context, *Like) (*Result, error)
}

func RegisterLikeServiceServer(s *grpc.Server, srv LikeServiceServer) {
	s.RegisterService(&_LikeService_serviceDesc, srv)
}

func _LikeService_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Like)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LikeServiceServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/like.LikeService/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LikeServiceServer).SendMessage(ctx, req.(*Like))
	}
	return interceptor(ctx, in, info, handler)
}

var _LikeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "like.LikeService",
	HandlerType: (*LikeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "sendMessage",
			Handler:    _LikeService_SendMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "like.proto",
}
