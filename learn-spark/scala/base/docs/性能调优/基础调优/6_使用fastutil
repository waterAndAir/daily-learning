### fastutil介绍
fastutil能够提供更小的内存占用，更快的存取速度；我们使用fastutil提供的集合类，来替代自己平时使用的JDK的
原生的Map、List、Set，好处在于，fastutil集合类，可以减小内存的占用，并且在进行集合的遍历、根据索引（或者key）
获取元素的值和设置元素的值的时候，提供更快的存取速度；
fastutil也提供了64位的array、set和list，以及高性能快速的，以及实用的IO类，来处理二进制和文本类型的文件；

### spark 中应用 fastutil 的场景
1. 如果算子函数使用了外部变量;那么第一,可以使用 Broadcast 广播变量优化;第二,可以使用 kryo 序列化类库;第三,如果外部变来个是某种比较
大的集合,那么可以考虑使用 fastutil 改写外部变量,首先从源头上就减少内存的占用,通过广播变量进一步减少内存占用,再通过 Kryo 序列化进一步减少内存
占用和网络传输  

2. 在算子函数里,也就是task要执行的计算逻辑里面,如果逻辑中,出现要创建比较大的Map,List等集合,可能会占用较大的内存空间,而且可能涉及到性能消耗的
遍历,存取等集合操作;那么此时,可以考虑将这些集合类型使用 fastutil 类库重写,使用了 fastutil 集合类以后,就可以在一定程度上,减少task创建出来的
集合类型的内存占用,避免 executor 内存频繁占满,频繁唤起 GC,导致性能下降

### 关于 fastutil 调优的说明
对于性能调优来说,主要是分配足够资源,提高并行度,RDD架构与持久化, broadcast,kryo,fastutil只能起到锦上添花的作用 