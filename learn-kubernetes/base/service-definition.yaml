# Service 定义文件的完整内容
apiVersion: v1              # required
kind: Service               # required
metadata:                   # required
  name: string              # required  Service 名称
  namespace: string         # 命名空间,不指定时将使用 "default" 命名空间
  labels:                   # 自定义标签列表
    - name: string
  annotationis:             # 自定义注解列表
    - name: string
spec:                       # required
  selector: []              # required Label Selector 配置,将选择具有指定 Label 标签的 Pod 作为管理范围
  type: string              # required Service 的访问方式,可取值为 ClusterIP(默认),NodePort,LoadBalancer.
                              # ClusterIP: 虚拟的服务IP地址,该地址用于 Kubernetes 集群内部的 Pod 访问,在 Node 上 kube-proxy 通过设置的 iptables 规则进行转发
                              # NodePort: 使用宿主机的端口,使能够访问各 Node 的外部客户端通过 NodeIP + Port 就能访问服务
                              # LoadBalancer: 使用外接负载均衡器完成到服务的负载分发,需要在 spec.status.loadBalancer 字段指定外部负载均衡器的 IP 地址,并同时定义 nodePort 和 clusterIP, 用于公有云环境
  clusterIP: string         # 虚拟服务IP地址,当 type=ClusterIP 时,如果不指定,系统自动分配;当 type=LoadBalancer 时,需要手动指定;
  sessionAffinity: string   # 是否支持 Session, 可选值为ClientIP, 默认为空. ClientIP: 表示将同一个客户端(根据客户端的IP地址决定)的访问请求都转发到同一个后端 Pod,默认的负载均衡策略是 RoundRobin
  ports:                    # Service 需要暴露的端口列表
    - name: string          # 端口名称
      protocol: string      # 端口协议
      port: int             # 服务监听的端口
      targetPort: int       # 需要转发到后端 Pod 的端口号
      nodePort: int         # 当 spec.type=NodePort 时,指定映射到物理机的端口号
  status:                   # 当 spec.type=LoadBalancer 时,设置外部负载均衡器的地址,用于公有云环境
    loadBalancer:           # 外部负载均衡器
      ingress:              # 外部负载均衡器
        ip: string          # 外部负载均衡器的IP地址
        hostname: string    # 外部负载均衡器的主机名